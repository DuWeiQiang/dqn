layers {
  name: "cont_input_layer"
  type: "MEMORY_DATA"
  top: "cont_input"
  top: "dummy2"
  memory_data_param {
    batch_size: 2
    channels: 1
    height: 1
    width: 1
  }
}
layers {
  name: "frames_input_layer_0"
  type: "MEMORY_DATA"
  top: "frames_0"
  top: "dummy1_0"
  memory_data_param {
    batch_size: 32
    channels: 4
    height: 84
    width: 84
  }
}
layers {
  name: "conv1_layer_0"
  type: "CONVOLUTION"
  bottom: "frames_0"
  top: "conv1_0"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 16
    kernel_size: 8
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
  param: "conv1_w"
  param: "conv1_b"
}
layers {
  name: "conv1_relu_layer_0"
  type: "RELU"
  bottom: "conv1_0"
  top: "conv1_0"
  relu_param {
    negative_slope: 0.01
  }
}
layers {
  name: "conv2_layer_0"
  type: "CONVOLUTION"
  bottom: "conv1_0"
  top: "conv2_0"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 32
    kernel_size: 4
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
  param: "conv2_w"
  param: "conv2_b"
}
layers {
  name: "conv2_relu_layer_0"
  type: "RELU"
  bottom: "conv2_0"
  top: "conv2_0"
  relu_param {
    negative_slope: 0.01
  }
}
layers {
  name: "ip1_layer_0"
  type: "INNER_PRODUCT"
  bottom: "conv2_0"
  top: "ip1_0"
  inner_product_param {
    num_output: 256
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
  param: "ip1_w"
  param: "ip1_b"
}
layers {
  name: "ip1_relu_layer_0"
  type: "RELU"
  bottom: "ip1_0"
  top: "ip1_0"
  relu_param {
    negative_slope: 0.01
  }
}
layers {
  name: "frames_input_layer_1"
  type: "MEMORY_DATA"
  top: "frames_1"
  top: "dummy1_1"
  memory_data_param {
    batch_size: 32
    channels: 4
    height: 84
    width: 84
  }
}
layers {
  name: "conv1_layer_1"
  type: "CONVOLUTION"
  bottom: "frames_1"
  top: "conv1_1"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 16
    kernel_size: 8
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
  param: "conv1_w"
  param: "conv1_b"
}
layers {
  name: "conv1_relu_layer_1"
  type: "RELU"
  bottom: "conv1_1"
  top: "conv1_1"
  relu_param {
    negative_slope: 0.01
  }
}
layers {
  name: "conv2_layer_1"
  type: "CONVOLUTION"
  bottom: "conv1_1"
  top: "conv2_1"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 32
    kernel_size: 4
    stride: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
  param: "conv2_w"
  param: "conv2_b"
}
layers {
  name: "conv2_relu_layer_1"
  type: "RELU"
  bottom: "conv2_1"
  top: "conv2_1"
  relu_param {
    negative_slope: 0.01
  }
}
layers {
  name: "ip1_layer_1"
  type: "INNER_PRODUCT"
  bottom: "conv2_1"
  top: "ip1_1"
  inner_product_param {
    num_output: 256
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
  param: "ip1_w"
  param: "ip1_b"
}
layers {
  name: "ip1_relu_layer_1"
  type: "RELU"
  bottom: "ip1_1"
  top: "ip1_1"
  relu_param {
    negative_slope: 0.01
  }
}
layers {
  name: "concat"
  type: "CONCAT"
  bottom: "ip1_0"
  bottom: "ip1_1"
  top: "concat_frames"
  concat_param {
    concat_dim: 0
  }
}
layer {
  name: "lstm1"
  type: "LSTM"
  bottom: "concat_frames"
  bottom: "cont_input"
  top: "lstm1"
  recurrent_param {
    num_output: 256
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layers {
  name: "target_input_layer"
  type: "MEMORY_DATA"
  top: "target"
  top: "dummy2"
  memory_data_param {
    batch_size: 32
    channels: 18
    height: 1
    width: 1
  }
}
layers {
  name: "filter_input_layer_0"
  type: "MEMORY_DATA"
  top: "filter"
  top: "dummy3"
  memory_data_param {
    batch_size: 32
    channels: 18
    height: 1
    width: 1
  }
}
layers {
  name: "silence_layer"
  type: "SILENCE"
  bottom: "dummy1"
  bottom: "dummy2"
  bottom: "dummy3"
}
layers {
  name: "ip2_layer"
  type: "INNER_PRODUCT"
  bottom: "ip1"
  top: "q_values"
  inner_product_param {
    num_output: 18
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
  }
}
layers {
  name: "eltwise_layer"
  type: "ELTWISE"
  bottom: "q_values"
  bottom: "filter"
  top: "filtered_q_values"
  eltwise_param {
    operation: PROD
  }
}
layers {
  name: "loss"
  type: "EUCLIDEAN_LOSS"
  bottom: "filtered_q_values"
  bottom: "target"
  top: "loss"
}
